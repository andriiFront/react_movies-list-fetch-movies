{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","fetchMovie","a","fetch","json","FindMovie","addNewMovie","useState","query","setQuery","setMovie","errorLoad","setErrorLoad","findMovie","film","Response","Title","Plot","Poster","imdbID","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","data","addMovie","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f007ee8e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_URL = `https://www.omdbapi.com/`;\n\nexport const fetchMovie = async(title) => {\n  const movie = await fetch(\n    `${API_URL}?apikey=5a54f262&t=${title}`,\n  );\n\n  return movie.json();\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { fetchMovie } from '../../api/api';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [errorLoad, setErrorLoad] = useState(false);\n\n  const handleChange = (e) => {\n    setErrorLoad(false);\n    setQuery(e.target.value);\n  };\n\n  const findMovie = async() => {\n    const film = await fetchMovie(query);\n\n    if (film.Response === 'False') {\n      setMovie(null);\n      setErrorLoad(true);\n      setQuery('');\n\n      return;\n    }\n\n    setMovie({\n      title: film.Title,\n      description: film.Plot,\n      imgUrl: film.Poster,\n      imdbUrl: `https://www.imdb.com/title/${film.imdbID}/`,\n      imdbId: film.imdbID,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!movie) {\n      setErrorLoad(false);\n\n      return;\n    }\n\n    addNewMovie(movie);\n    setQuery('');\n    setMovie(null);\n    setErrorLoad(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${errorLoad && 'is-danger'}`}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {errorLoad && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              onClick={onSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </div>\n        )\n      }\n\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, addMovie] = useState(data);\n\n  const addNewMovie = (newMovie) => {\n    if (movies.some(\n      movie => movie.imdbId === newMovie.imdbId,\n    )) {\n      return;\n    }\n\n    addMovie([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}